### 一、问题描述及算法设计

#### 1. 问题描述

根据实验数据，拟合出公式：
$$
r= \left(\frac{t^2 E}{\rho}\right)^{\frac{1}{5}}
$$
通过将公式转化为线性形式：
$$
y= x + b
$$
其中
$$
y = 5 \ln(r)
$$

$$
x = 2 \ln(t)
$$

$$
b = \ln(E) - \ln(\rho)
$$

对数据进行线性最小二乘法拟合，求解 E 的值。

#### 2. 算法设计

采用线性最小二乘法的原因：

- 简单、高效且适合线性关系的拟合问题；
- 提供最优拟合结果，误差最小。

### 二、程序设计及其实现代码

#### 1. 主程序功能

拟合数据并求解 E，同时验证拟合结果。

#### 2. 子函数设计

##### 函数 1：`data_transform`

**功能**：将原始数据转换为线性拟合形式。

| 形参与函数类型 | 参数意义             |
| -------------- | -------------------- |
| `t` (array)    | 时间数据（自变量）   |
| `r` (array)    | 测量值数据（因变量） |

##### 函数 2：`linear_fit`

**功能**：对数据进行线性最小二乘法拟合，返回斜率和截距。

| 形参与函数类型 | 参数意义   |
| -------------- | ---------- |
| `x` (array)    | 自变量数据 |
| `y` (array)    | 因变量数据 |

##### 函数 3：`calculate_E`

**功能**：根据截距计算常量 E。

| 形参与函数类型      | 参数意义     |
| ------------------- | ------------ |
| `intercept` (float) | 线性拟合截距 |
| `rho` (float)       | 空气密度     |

#### 3. 主程序实现

**代码**：

```python
import numpy as np
import matplotlib.pyplot as plt

# 数据表
t = np.array([0.10, 0.24, 0.38, 0.52, 0.66, 0.80, 0.94, 1.08, 1.22, 1.36,
              1.50, 1.65, 1.79, 1.93, 3.26, 3.53, 3.80, 4.07, 4.34, 4.61,
              15.0, 25.0, 34.0, 53.0, 62.0])
r = np.array([11.1, 19.9, 25.4, 28.8, 31.9, 34.2, 36.3, 38.9, 41.0, 42.8,
              44.4, 46.0, 46.9, 48.7, 59.0, 61.1, 62.9, 64.3, 65.6, 97.3,
              106.5, 130.0, 145.0, 175.0, 185.0])

# 转化为线性关系
y = 5 * np.log(r)
x = 2 * np.log(t)

# 线性拟合
coefficients = np.polyfit(x, y, 1)  # 一次多项式拟合
slope, intercept = coefficients

# 计算E值
rho = 1.25  # 空气密度
E = np.exp(intercept + np.log(rho))

# 打印结果
print(f"拟合得到的斜率: {slope}")
print(f"拟合得到的截距: {intercept}")
print(f"拟合得到的E值: {E}")

# 可视化
y_fit = slope * x + intercept  # 拟合线
plt.scatter(x, y, color='blue', label='Data Points')
plt.plot(x, y_fit, color='red', label='Fitted Line')
plt.xlabel('2 * ln(t)')
plt.ylabel('5 * ln(r)')
plt.legend()
plt.title('Linear Fitting')
plt.grid()
plt.show()
```

### 三、程序运行结果

运行程序后，输出以下结果：

<img src="./figs/plot.png">

<img src="./figs/result.png">

### 四、算法分析及其报告总结

#### 1. 算法验证

- **正确性**：拟合结果准确，残差较小，验证了线性最小二乘法在该问题中的适用性。
- **高效性**：算法复杂度为 O(n)，能快速处理较大规模数据。
- **健壮性**：对输入数据要求较低（仅需正值数据），适用范围广。

#### 2. 不足与改进方向

- **不足**：仅限于线性拟合，无法处理非线性误差或其他复杂模型。
- **改进方向**：
  1. 增加误差分析和统计量计算，量化拟合质量；
  2. 若数据复杂，可引入多项式或非线性拟合方法。

